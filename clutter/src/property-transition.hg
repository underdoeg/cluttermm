/* Copyright (C) 2014 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <glibmm/ustring.h>
#include <cluttermm/transition.h>
#include <cluttermm/scriptable.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(glibmm/private/object_p.h)
_PINCLUDE(cluttermm/private/transition_p.h)

namespace Clutter
{

class PropertyTransition : public Transition, public Scriptable
{
  _CLASS_GOBJECT(PropertyTransition, ClutterPropertyTransition, CLUTTER_PROPERTY_TRANSITION, Transition, ClutterTransition)
  _IMPLEMENTS_INTERFACE(Scriptable)

protected:

  _WRAP_CTOR(PropertyTransition(const Glib::ustring& property_name), clutter_property_transition_new)

public:
  /** Creates a new PropertyTransition.
   * The property name must be an animatable property of Actor.
   */
  _WRAP_CREATE(const Glib::ustring& property_name)
  
  template<typename ValueType>
  static Glib::RefPtr<PropertyTransition> create(const Glib::ustring& property_name, const ValueType& to);

  _WRAP_METHOD(void set_property_name(const Glib::ustring& property_name), clutter_property_transition_set_property_name)
  _WRAP_METHOD(Glib::ustring get_property_name() const, clutter_property_transition_get_property_name)


  _WRAP_PROPERTY("property-name", Glib::ustring)
};

  template<typename ValueType>
  Glib::RefPtr<PropertyTransition> PropertyTransition::create(const Glib::ustring& property_name, const ValueType& to){
  	Glib::RefPtr<PropertyTransition> transition = PropertyTransition::create(property_name);
  	transition->set_to(to);
  	return transition;
  }

} // namespace Clutter
