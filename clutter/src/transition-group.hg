/* Copyright (C) 2014 The cluttermm Development Team
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free
 * Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

#include <glibmm/object.h>
#include <cluttermm/transition.h>
#include <cluttermm/scriptable.h>

_DEFS(cluttermm,clutter)
_PINCLUDE(glibmm/private/object_p.h)
_PINCLUDE(cluttermm/private/transition_p.h)
_PINCLUDE(cluttermm/private/transition-group_p.h)

namespace Clutter
{

class TransitionGroup : public Transition, public Scriptable
{
  _CLASS_GOBJECT(TransitionGroup, ClutterTransitionGroup, CLUTTER_TRANSITION_GROUP, Transition, ClutterTransition)
  _IMPLEMENTS_INTERFACE(Scriptable)

protected:

  _WRAP_CTOR(TransitionGroup(), clutter_transition_group_new)

public:
  /** 
   * Creates a new TransitionGroup.
   */
  _WRAP_CREATE()

  _WRAP_METHOD(void add_transition(const Glib::RefPtr<Transition>& child), clutter_transition_group_add_transition)
  _WRAP_METHOD(void remove_transition(const Glib::RefPtr<Transition>& child), clutter_transition_group_remove_transition)
  _WRAP_METHOD(void remove_all(), clutter_transition_group_remove_all)

};

} // namespace Clutter
